{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap cd0ba58f6843fadb94a2","webpack:///./src/index.js"],"names":["EXCEPTION_PATTERN","LINE_PATTERN","StackPackage","name","aliases","isVendor","trim","length","Error","Array","String","prototype","startsWith","search","indexOf","stackPackage","i","StackLine","javaClass","method","source","line","parseInt","StackGroup","lines","stackLine","push","exception","message","Stack","opts","groups","vendorPackages","Object","keys","key","stackTrace","parsedException","split","forEach","match","parsedLine","index","equals","group","addLine","addException"],"mappings":"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","file":"java-stack-parser.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"java-stack-parser\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"java-stack-parser\"] = factory();\n\telse\n\t\troot[\"java-stack-parser\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap cd0ba58f6843fadb94a2\n **/","const EXCEPTION_PATTERN = /([\\w\\d\\.]*exception)\\:\\s*(.*)$/i;\nconst LINE_PATTERN = /((([\\d\\w]*\\.)*[\\d\\w]*)\\.)?([\\d\\w\\$]*)\\.([\\d\\w\\$]*)\\(([\\d\\w\\.\\s]*)(\\:(\\d*))?\\)/;\n\nexport class StackPackage {\n    constructor(name, aliases = [], isVendor = false) {\n        if (!name || name.trim().length === 0) {\n            throw new Error('Cannot create stack package: name is not defined');\n        }\n        if (!aliases || !(aliases instanceof Array)) {\n            throw new Error('Cannot create stack package: aliases is not defined or of a wrong type');\n        }\n        this.name = name;\n        this.aliases = aliases;\n        this.isVendor = isVendor;\n        if (!String.prototype.startsWith) {\n            String.prototype.startsWith = function (search) {\n                return this.indexOf(search) === 0;\n            };\n        }\n    }\n\n    equals(stackPackage) {\n        if (!stackPackage) {\n            return false;\n        }\n        if (stackPackage.name === this.name) {\n            return true;\n        }\n        for (let i = 0; i < this.aliases.length; i++) {\n            if (this.aliases[i] === stackPackage.name || stackPackage.name.startsWith(this.aliases[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\nexport class StackLine {\n    constructor(stackPackage, javaClass, method, source, line) {\n        if (!stackPackage || !(stackPackage instanceof StackPackage)) {\n            throw new Error('Cannot create stack line: stack package is null or of a wrong type');\n        }\n        this.stackPackage = stackPackage;\n        this.javaClass = javaClass || 'Unknown';\n        this.method = method || 'Unknown';\n        this.source = source || 'Unknown';\n        this.line = line ? parseInt(line, 10) : -1;\n    }\n}\n\nexport class StackGroup {\n    constructor(stackPackage) {\n        if (!stackPackage || !(stackPackage instanceof StackPackage)) {\n            throw new Error('Cannot create stack group: stack package is null or of a wrong type');\n        }\n        this.stackPackage = stackPackage;\n        this.lines = [];\n    }\n\n    addLine(stackLine) {\n        if (stackLine instanceof StackLine) {\n            this.lines.push(stackLine);\n        }\n    }\n\n    addException(exception, message) {\n        this.exception = {\n            exception: exception,\n            message: message\n        };\n    }\n}\n\nexport class Stack {\n    constructor(opts = {}) {\n        this.groups = [];\n        this.vendorPackages = [];\n\n        for (let key of Object.keys(opts)) {\n            this.vendorPackages.push(new StackPackage(key, opts[key], true));\n        }\n    }\n\n    parse(stackTrace) {\n        this.groups = [];\n\n        let parsedException = null;\n        let lines = stackTrace.split('\\n');\n        lines.forEach((line)=> {\n            if (parsedException === null) {\n                parsedException = line.trim().match(EXCEPTION_PATTERN);\n            }\n\n            let parsedLine = line.trim().match(LINE_PATTERN);\n\n            if (parsedLine !== null) {\n                let stackPackage = new StackPackage(parsedLine[2] || 'Unknown');\n                for (let index in this.vendorPackages) {\n                    if (this.vendorPackages[index].equals(stackPackage)) {\n                        stackPackage = this.vendorPackages[index];\n                        break;\n                    }\n                }\n\n                let stackLine = new StackLine(\n                    stackPackage,\n                    parsedLine[4],\n                    parsedLine[5],\n                    parsedLine[6],\n                    parsedLine[8]\n                );\n\n                if (this.groups.length === 0) {\n                    this.groups.push(new StackGroup(stackPackage));\n                }\n\n                let group = this.groups[this.groups.length - 1];\n                if (!group.stackPackage.equals(stackPackage)) {\n                    group = new StackGroup(stackPackage);\n                    this.groups.push(group);\n                }\n\n                group.addLine(stackLine);\n                if (parsedException !== null) {\n                    group.addException(parsedException[1], parsedException[2]);\n                    parsedException = null;\n                }\n            }\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/"],"sourceRoot":""}